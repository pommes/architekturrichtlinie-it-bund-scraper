CREATE TABLE "AR_RICHTLINIE" (
	"ID"	INTEGER NOT NULL UNIQUE,
	"RICHTLINIE_ID"	TEXT NOT NULL UNIQUE,
	"DETAIL_ID_AKTUELL"	INTEGER,
	"QUELLE"	TEXT NOT NULL CHECK("QUELLE" IN ('ARCH', 'TECH')),
	"LEBENSZYKLUS"	TEXT NOT NULL CHECK("LEBENSZYKLUS" IN ('AKTIV', 'ERSETZT', 'ENTFERNT')),
	"NACHFOLGER_ID"	TEXT,
	"ENTFERNT_VERSION"	TEXT,
	"ERSTELLT"	DATETIME NOT NULL DEFAULT current_timestamp,
	"AKTUALISIERT"	DATETIME NOT NULL DEFAULT current_timestamp,
	PRIMARY KEY("ID" AUTOINCREMENT)
);

CREATE TRIGGER [tr_richtlinie_aktualisiert]
    AFTER UPDATE
    ON AR_RICHTLINIE
	FOR EACH ROW
	WHEN NEW.AKTUALISIERT <= OLD.AKTUALISIERT
BEGIN
    UPDATE AR_RICHTLINIE SET AKTUALISIERT=CURRENT_TIMESTAMP where ID=OLD.ID;
END;


CREATE TABLE "AR_DETAIL" (
	"ID"	INTEGER NOT NULL UNIQUE,
	"RICHTLINIE_ID"	INTEGER NOT NULL,
	"VERSION"	TEXT NOT NULL,
	"JAHR"	INTEGER NOT NULL,
	"THEMENBEREICH"	TEXT,
	"BEZEICHNUNG"	TEXT NOT NULL,
	"VERBINDLICHKEIT"	TEXT NOT NULL CHECK("VERBINDLICHKEIT" IN ('MUSS', 'SOLL', 'KANN', 'DARF NICHT')),
	"BESCHREIBUNG"	TEXT NOT NULL,
	"ERSTELLT"	DATETIME NOT NULL DEFAULT current_timestamp,
	"AKTUALISIERT"	DATETIME NOT NULL DEFAULT current_timestamp,
	PRIMARY KEY("ID" AUTOINCREMENT)
);

CREATE UNIQUE INDEX "idx_detail_richtlinie_id_version" ON "AR_DETAIL" (
	"RICHTLINIE_ID",
	"VERSION"
);

CREATE INDEX "idx_detail_version" ON "AR_DETAIL" (
	"VERSION"
);

CREATE TRIGGER [tr_detail_aktualisiert]
    AFTER UPDATE
    ON AR_DETAIL
	FOR EACH ROW
	WHEN NEW.AKTUALISIERT <= OLD.AKTUALISIERT
BEGIN
    UPDATE AR_DETAIL SET AKTUALISIERT=CURRENT_TIMESTAMP where ID=OLD.ID;
END;


CREATE TABLE "AR_TAG" (
	"ID"	INTEGER NOT NULL UNIQUE,
	"RICHTLINIE_ID"	TEXT NOT NULL,
	"TAG"	TEXT NOT NULL,
	"ERSTELLT"	DATETIME NOT NULL DEFAULT current_timestamp,
	"AKTUALISIERT"	DATETIME NOT NULL DEFAULT current_timestamp,
	PRIMARY KEY("ID" AUTOINCREMENT)
);

CREATE TRIGGER [tr_tag_aktualisiert]
    AFTER UPDATE
    ON AR_TAG
	FOR EACH ROW
	WHEN NEW.AKTUALISIERT <= OLD.AKTUALISIERT
BEGIN
    UPDATE AR_TAG SET AKTUALISIERT=CURRENT_TIMESTAMP where ID=OLD.ID;
END;


CREATE TABLE "AR_NOTIZ" (
	"ID"	INTEGER NOT NULL UNIQUE,
	"RICHTLINIE_ID"	INTEGER NOT NULL,
	"TYP"	TEXT NOT NULL DEFAULT 'NOTIZ',
	"PRIO"	TEXT NOT NULL DEFAULT 'MITTEL' CHECK("PRIO" IN ('SEHR GERING', 'GERING', 'MITTEL', 'HOCH', 'SEHR HOCH')),
	"BESCHREIBUNG"	TEXT NOT NULL,
	"ERSTELLT"	DATETIME NOT NULL DEFAULT current_timestamp,
	"AKTUALISIERT"	DATETIME NOT NULL DEFAULT current_timestamp,
	PRIMARY KEY("ID" AUTOINCREMENT)
);

CREATE TRIGGER [tr_notiz_aktualisiert]
    AFTER UPDATE
    ON "AR_NOTIZ"
	FOR EACH ROW
	WHEN NEW.AKTUALISIERT <= OLD.AKTUALISIERT
BEGIN
    UPDATE "AR_NOTIZ" SET AKTUALISIERT=CURRENT_TIMESTAMP where ID=OLD.ID;
END;


CREATE VIEW "Aktuelle Architekturrichtlinien ohne Tags oder Relevanzbewertung" AS
select
    r.richtlinie_id ID,
    r.QUELLE Quelle,
	d.version Version,
    d.BEZEICHNUNG Bezeichnung,
	(select count(id) from AR_TAG t1 where t1.RICHTLINIE_ID=r.RICHTLINIE_ID) "Anz Tags",
	(select count(id) from AR_NOTIZ rel1 where rel1.RICHTLINIE_ID=r.RICHTLINIE_ID and rel1.TYP='RELEVANZ SYSARCH') "Anz Relevanz"
from
    AR_RICHTLINIE r
    inner join AR_DETAIL d on d.id=r.DETAIL_ID_AKTUELL
where 1=1
    and (
	  (select count(id) from AR_TAG t1 where t1.RICHTLINIE_ID=r.RICHTLINIE_ID) = 0
	  or
	  (select count(id) from AR_NOTIZ rel1 where rel1.RICHTLINIE_ID=r.RICHTLINIE_ID and rel1.TYP='RELEVANZ SYSARCH') = 0
	  )
order by
    r.Quelle,
    r.RICHTLINIE_ID
;


CREATE VIEW "Tagfilter Aktuell" AS select
  t.TAG Tag,
  r.richtlinie_id ID,
  d.BEZEICHNUNG Bezeichnung,
  d.VERBINDLICHKEIT Verbindlichkeit,
  r.QUELLE Quelle,
  d.version Version,
  d.jahr Jahr
from
  AR_RICHTLINIE r
  inner join AR_DETAIL d on d.id=r.DETAIL_ID_AKTUELL
  join AR_TAG t on t.RICHTLINIE_ID=d.RICHTLINIE_ID
where 1=1
;


CREATE VIEW "Aktuelle Änderungen" AS
select * from (
   -- Änderung
	select
		r2.ID,
		r2.RICHTLINIE_ID,
		r2.DETAIL_ID_AKTUELL,
		r2.QUELLE,
		d.BEZEICHNUNG,
		d.VERBINDLICHKEIT,
		n.BESCHREIBUNG
	from AR_RICHTLINIE r1
		inner join AR_RICHTLINIE r2 on r1.NACHFOLGER_ID=r2.RICHTLINIE_ID and r2.LEBENSZYKLUS='AKTIV'
		inner join AR_DETAIL d on r2.DETAIL_ID_AKTUELL=d.ID
		left join AR_NOTIZ n on r2.RICHTLINIE_ID=n.RICHTLINIE_ID and n.TYP='AENDERUNG'
	where 1=1
		and r1.LEBENSZYKLUS='ERSETZT'
	union
	-- Neu
		select distinct
			r1.ID,
			r1.RICHTLINIE_ID,
			r1.DETAIL_ID_AKTUELL,
			r1.QUELLE,
			d.BEZEICHNUNG,
     		d.VERBINDLICHKEIT,
			'neu' BESCHREIBUNG
		from AR_RICHTLINIE r1
			inner join AR_DETAIL d on r1.DETAIL_ID_AKTUELL=d.ID
		where 1=1
			and r1.LEBENSZYKLUS='AKTIV'
			and 2 > (select count(d1.ID) from AR_DETAIL d1 where d1.RICHTLINIE_ID=r1.RICHTLINIE_ID)
			and not exists (select r2.ID from AR_RICHTLINIE r2 where r2.NACHFOLGER_ID=r1.RICHTLINIE_ID)
	union
	-- Entfernt
	select distinct
		r1.ID,
		r1.RICHTLINIE_ID,
		r1.DETAIL_ID_AKTUELL,
		r1.QUELLE,
		(select d.BEZEICHNUNG from AR_DETAIL d where d.RICHTLINIE_ID=r1.RICHTLINIE_ID) BEZEICHNUNG,
		(select d.VERBINDLICHKEIT from AR_DETAIL d where d.RICHTLINIE_ID=r1.RICHTLINIE_ID) VERBINDLICHKEIT,
		'entfallen' BESCHREIBUNG
	from AR_RICHTLINIE r1
		inner join AR_DETAIL d1 on d1.VERSION=r1.ENTFERNT_VERSION
			and d1.VERSION=(select d2.VERSION from AR_DETAIL d2 where d2.id=(select min(r2.DETAIL_ID_AKTUELL) from AR_RICHTLINIE r2))
	where 1=1
		and r1.LEBENSZYKLUS='ENTFERNT'
)
order by QUELLE, RICHTLINIE_ID
;